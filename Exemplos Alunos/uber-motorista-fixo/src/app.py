import random

# Pre√ßo por quil√¥metro
PRECO_POR_KM = 2.50  # Valor em R$

# Estrutura para armazenar informa√ß√µes do cliente fixo
class ClienteFixo:
    def __init__(self, nome, telefone):
        self.nome = nome
        self.telefone = telefone
        self.corridas = []

    def adicionar_corrida(self, distancia):
        self.corridas.append(distancia)

    def calcular_total_corridas(self):
        return sum(self.corridas) * PRECO_POR_KM

# Fun√ß√£o para calcular a tarifa com base na dist√¢ncia
def calcular_tarifa(distancia):
    return distancia * PRECO_POR_KM

# Fun√ß√£o para interagir com o cliente
def interagir_com_cliente(cliente):
    print(f"Ol√°, {cliente.nome}! Como posso ajud√°-lo hoje?")
    distancia = float(input("Digite a dist√¢ncia da corrida em km: "))
    tarifa = calcular_tarifa(distancia)
    cliente.adicionar_corrida(distancia)
    print(f"A tarifa para sua corrida de {distancia} km √© R$ {tarifa:.2f}.")
    print(f"Total acumulado em corridas: R$ {cliente.calcular_total_corridas():.2f}")

# Fun√ß√£o para oferecer promo√ß√µes
def oferecer_promocao(cliente):
    if len(cliente.corridas) > 5:
        desconto = random.uniform(0.1, 0.3)  # Desconto aleat√≥rio entre 10% e 30%
        print(f"üéâ Parab√©ns, {cliente.nome}! Voc√™ ganhou um desconto de {desconto*100:.0f}% na pr√≥xima corrida!")
    else:
        print("Continue utilizando nossos servi√ßos para ganhar promo√ß√µes exclusivas!")

# Fun√ß√£o principal
def main():
    cliente_fixo = ClienteFixo("Jo√£o Silva", "11999999999")
    while True:
        interagir_com_cliente(cliente_fixo)
        oferecer_promocao(cliente_fixo)
        continuar = input("Deseja realizar outra corrida? (s/n): ").lower()
        if continuar != 's':
            break

# Executa o programa
if __name__ == "__main__":
    main()